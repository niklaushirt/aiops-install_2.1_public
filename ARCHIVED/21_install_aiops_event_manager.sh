# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Installing Script for all AI OPS Event Manager
#
# V2.0 
#
# Â©2020 nikh@ch.ibm.com
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"

export TEMP_PATH=~/aiops-install

# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Do Not Edit Below
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"

set -o errexit
set -o pipefail
#set -o xtrace
source ./99_config-global.sh

export SCRIPT_PATH=$(pwd)
export LOG_PATH=""
__getClusterFQDN
__getInstallPath



# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Initialization
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
header2Begin "Initializing"

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Install Checks
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
header3Begin "Install Checks"

        getClusterFQDN
        
        #getHosts

        check_and_install_jq
        check_and_install_cloudctl
        check_and_install_kubectl
        check_and_install_oc
        check_and_install_helm
        checkHelmExecutable
        check_and_install_yq
        #dockerRunning
        checkOpenshiftReachable
        checkKubeconfigIsSet
        checkStorageClassExists
        checkDefaultStorageDefined
        #checkRegistryCredentials
        

header3End

header2End




header2Begin "Watson AI OPS Event Manager will be installed in Cluster '$CLUSTER_NAME'"

# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# CONFIG SUMMARY
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
__output "    ---------------------------------------------------------------------------------------------------------------------"
__output "  ðŸ”Ž Your configuration"
__output "    ---------------------------------------------------------------------------------------------------------------------"
__output "    CLUSTER :                  $CLUSTER_NAME"
__output "    REGISTRY TOKEN:            $ENTITLED_REGISTRY_KEY"
__output "    Event Manager NAMESPACE:   $WAIOPS_EVENT_MGR_NAMESPACE"
__output "    ---------------------------------------------------------------------------------------------------------------------"
__output "    STORAGE CLASS:             $WAIOPS_AI_MGR_STORAGE_CLASS_FILE"
__output "    ---------------------------------------------------------------------------------------------------------------------"
__output "    INSTALL PATH:              $INSTALL_PATH"
__output "    ---------------------------------------------------------------------------------------------------------------------------"
__output "  "



header2End 







# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Installing Prerequisites
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------

header2Begin "Install Prerequisites"
  



        header3Begin "Create Namespace $WAIOPS_EVENT_MGR_NAMESPACE"    
            oc create ns $WAIOPS_EVENT_MGR_NAMESPACE || true
        header3End




        header3Begin "Create Pull Secret"
            oc create secret docker-registry 'cp.stg.icr.io' --docker-server=$ENTITLED_REGISTRY --docker-username=$ENTITLED_REGISTRY_USER --docker-password=$ENTITLED_REGISTRY_KEY --namespace=$WAIOPS_EVENT_MGR_NAMESPACE || true
        header3End


        header3Begin "Patch Pull Secret"
            oc create serviceaccount noi-service-account -n $WAIOPS_EVENT_MGR_NAMESPACE || true
            oc adm policy add-scc-to-user privileged system:serviceaccount:namespace:noi-service-account || true
            oc patch serviceaccount noi-service-account -p '{"imagePullSecrets": [{"name": "<noi-secret>"}]}' -n $WAIOPS_EVENT_MGR_NAMESPACE || true
        header3End




        header3Begin "AI OPS - Install Subscription"
            kubectl apply -n $WAIOPS_EVENT_MGR_NAMESPACE -f ./yaml/waiops-base/waiops-catalog-subscription-event.yaml || true
            progressbar 30

            SUCCESFUL_SUBS=$(kubectl get -n $WAIOPS_EVENT_MGR_NAMESPACE ClusterServiceVersion | grep Succeeded | wc -l || true)

            while  ([[ $SUCCESFUL_SUBS =~ "0" ]] || [[ $SUCCESFUL_SUBS =~ "1" ]] || [[ $SUCCESFUL_SUBS =~ "2" ]]); do 
                SUCCESFUL_SUBS=$(kubectl get -n $WAIOPS_EVENT_MGR_NAMESPACE ClusterServiceVersion | grep Succeeded | wc -l || true)
                __output "   ðŸ•¦ There are still Subscriptions that are not ready $SUCCESFUL_SUBS/3. Waiting for 10 seconds...." && sleep 10; 
            done
            
            __output "      OK"
        header3End




header2End "Install Prerequisites"










# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Installing AI OPS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    


header2Begin "Install AIOPS Event Manager"
  

        header3Begin "AI OPS - Create Template Files"
            cp ./yaml/waiops-event/waiops-event-template.yaml $TEMP_PATH/$CLUSTER_NAME/$0/waiops-event.yaml
            ${SED} -i "s/<CLUSTER_FQDN>/$CLUSTER_NAME/" $TEMP_PATH/$CLUSTER_NAME/$0/waiops-event.yaml
            ${SED} -i "s/<NAMESPACE>/$WAIOPS_EVENT_MGR_NAMESPACE/" $TEMP_PATH/$CLUSTER_NAME/$0/waiops-event.yaml
            ${SED} -i "s/<STORAGE_CLASS>/$WAIOPS_AI_MGR_STORAGE_CLASS_FILE/" $TEMP_PATH/$CLUSTER_NAME/$0/waiops-event.yaml

        header3End



        header3Begin "AI OPS - Install AIOPS Event CR"
            kubectl apply -f $TEMP_PATH/$CLUSTER_NAME/$0/waiops-event.yaml || true
        header3End


header2End 






