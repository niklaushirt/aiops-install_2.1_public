# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Installing Script for all AI OPS components
#
# V2.0 
#
# Â©2020 nikh@ch.ibm.com
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"

export TEMP_PATH=~/aiops-install

# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Do Not Edit Below
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"

set -o errexit
set -o pipefail
#set -o xtrace
source ./99_config-global.sh

export SCRIPT_PATH=$(pwd)
export LOG_PATH=""
__getClusterFQDN
__getInstallPath



# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Initialization
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
header2Begin "Initializing"




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Install Checks
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
header3Begin "Install Checks"

        getClusterFQDN
        checkOpenshiftReachable
        checkKubeconfigIsSet
        checkStorageClassExists
        checkDefaultStorageDefined
        
header3End

header2End 




header3Begin "Watson AI OPS AI Manager will be installed in Cluster '$CLUSTER_NAME'"

# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# CONFIG SUMMARY
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
__output "    ---------------------------------------------------------------------------------------------------------------------"
__output "  ðŸ”Ž Your configuration"
__output "    ---------------------------------------------------------------------------------------------------------------------"
__output "    CLUSTER :                  $CLUSTER_NAME"
__output "    REGISTRY TOKEN:            $ENTITLED_REGISTRY_KEY"
__output "    AI Manager NAMESPACE:      $WAIOPS_AI_MGR_NAMESPACE"
__output "    ---------------------------------------------------------------------------------------------------------------------"
__output "    STORAGE CLASS:             $WAIOPS_AI_MGR_STORAGE_CLASS_FILE"
__output "    ---------------------------------------------------------------------------------------------------------------------"
__output "    INSTALL PATH:              $INSTALL_PATH"
__output "    ---------------------------------------------------------------------------------------------------------------------------"
__output "  "
header3End



header2End 






# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Installing Prerequisites
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------

header2Begin "Install Prerequisites"
  



        header3Begin "Create Pull Secret"
            oc create secret docker-registry 'cp.stg.icr.io' --docker-server=$ENTITLED_REGISTRY --docker-username=$ENTITLED_REGISTRY_USER --docker-password=$ENTITLED_REGISTRY_KEY --namespace=$WAIOPS_AI_MGR_NAMESPACE || true
        header3End




        header3Begin "Adjust OCP Stuff"
            oc adm policy add-role-to-user cpd-admin-role $(oc whoami) --role-namespace=$WAIOPS_AI_MGR_NAMESPACE -n $WAIOPS_AI_MGR_NAMESPACE
            oc project $WAIOPS_AI_MGR_NAMESPACE

        header3End




        header3Begin "AI OPS - Create Subscription for Strimzi"
            CPD_SUB=$(kubectl get subscription -n openshift-operators | grep strimzi-kafka-operator 2>&1 ) || true
            if [[ $CPD_SUB =~ "strimzi-kafka-operator" ]];
            then
                __output "Strimzi Subscription already installed. Skipping..."
            else
                kubectl apply -f ./yaml/waiops-manager/waiops-strimzi-subscription.yaml
            
                progressbar 60
            fi

            oc label --overwrite namespace $WAIOPS_AI_MGR_NAMESPACE ns=$WAIOPS_AI_MGR_NAMESPACE  || true
        header3End




header2End 










# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Installing AI OPS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    


header2Begin "Install AIOPS Manager for OpenShift"
  

        header3Begin "AI OPS - Create Template Files"
            cp ./yaml/waiops-manager/waiops-aiops-manager-template.yaml $TEMP_PATH/$CLUSTER_NAME/$0/waiops-aiops-manager.yaml
            ${SED} -i "s/<STORAGE_CLASS>/$WAIOPS_AI_MGR_STORAGE_CLASS_FILE/" $TEMP_PATH/$CLUSTER_NAME/$0/waiops-aiops-manager.yaml
            ${SED} -i "s/<NAMESPACE>/$NAMESPACE/" $TEMP_PATH/$CLUSTER_NAME/$0/waiops-aiops-manager.yaml
            ${SED} -i "s/<ENV_SIZE>/$WAIOPS_AI_MGR_SIZE/" $TEMP_PATH/$CLUSTER_NAME/$0/waiops-aiops-manager.yaml
        header3End



        header3Begin "AI OPS - Install AIOPS Manager CR"
            kubectl apply -f $TEMP_PATH/$CLUSTER_NAME/$0/waiops-aiops-manager.yaml || true
        header3End



      

header2End 



